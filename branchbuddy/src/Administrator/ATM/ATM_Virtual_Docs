import React, { useState } from "react";

function ATM_Virtual_Docs() {
  // State for selected institution, group/branch, and ATM
  const [selectedInstitution, setSelectedInstitution] = useState("");
  const [selectedGroupBranch, setSelectedGroupBranch] = useState("");
  const [selectedATM, setSelectedATM] = useState("");

  // Sample data for dropdown options
  const institutions = ["Institution 1", "Institution 2", "Institution 3"];
  const groupsBranches = {
    "Institution 1": ["Group/Branch 1A", "Group/Branch 1B", "Group/Branch 1C"],
    "Institution 2": ["Group/Branch 2A", "Group/Branch 2B", "Group/Branch 2C"],
    "Institution 3": ["Group/Branch 3A", "Group/Branch 3B", "Group/Branch 3C"]
  };
  const ATMs = {
    "Group/Branch 1A": ["ATM 1A1", "ATM 1A2", "ATM 1A3"],
    "Group/Branch 1B": ["ATM 1B1", "ATM 1B2", "ATM 1B3"],
    "Group/Branch 1C": ["ATM 1C1", "ATM 1C2", "ATM 1C3"],
    // Add more ATMs for other branches
  };

  // Function to handle institution selection
  const handleInstitutionSelect = (event) => {
    setSelectedInstitution(event.target.value);
    // Reset selected group/branch and ATM when a new institution is selected
    setSelectedGroupBranch("");
    setSelectedATM("");
  };

  // Function to handle group/branch selection
  const handleGroupBranchSelect = (event) => {
    setSelectedGroupBranch(event.target.value);
    // Reset selected ATM when a new group/branch is selected
    setSelectedATM("");
  };

  // Function to handle ATM selection
  const handleATMSelect = (event) => {
    setSelectedATM(event.target.value);
  };

  return (
    <div>
      <h2>ATM Form</h2>
      {/* Institution dropdown */}
      <div>
        <label htmlFor="institutionSelect">Institution:</label>
        <select id="institutionSelect" value={selectedInstitution} onChange={handleInstitutionSelect}>
          <option value="">Select an institution</option>
          {institutions.map((institution, index) => (
            <option key={index} value={institution}>{institution}</option>
          ))}
        </select>
      </div>

      {/* Group/Branch dropdown */}
      <div>
        <label htmlFor="groupBranchSelect">Group/Branch:</label>
        <select id="groupBranchSelect" value={selectedGroupBranch} onChange={handleGroupBranchSelect}>
          <option value="">Select a group/branch</option>
          {groupsBranches[selectedInstitution] &&
            groupsBranches[selectedInstitution].map((groupBranch, index) => (
              <option key={index} value={groupBranch}>{groupBranch}</option>
            ))}
        </select>
      </div>

      {/* ATM dropdown */}
      <div>
        <label htmlFor="ATMSelect">ATM:</label>
        <select id="ATMSelect" value={selectedATM} onChange={handleATMSelect}>
          <option value="">Select an ATM</option>
          {ATMs[selectedGroupBranch] &&
            ATMs[selectedGroupBranch].map((ATM, index) => (
              <option key={index} value={ATM}>{ATM}</option>
            ))}
        </select>
      </div>
    </div>
  );
}

export default ATM_Virtual_Docs;
